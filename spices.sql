-- MySQL Script generated by MySQL Workbench
-- Ср 03 июн 2020 10:34:40
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema spice
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `spice` ;

-- -----------------------------------------------------
-- Schema spice
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `spice` DEFAULT CHARACTER SET utf8 ;
USE `spice` ;

-- -----------------------------------------------------
-- Table `spice`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spice`.`user` ;

CREATE TABLE IF NOT EXISTS `spice`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_email` VARCHAR(255) NOT NULL,
  `user_pass` CHAR(32) NOT NULL,
  `user_salt` CHAR(32) NOT NULL,
  `user_created` TIMESTAMP NOT NULL DEFAULT now(),
  `user_modified` TIMESTAMP NOT NULL DEFAULT now(),
  `user_status` INT NOT NULL DEFAULT 0,
  `user_activation_hash` CHAR(32) NOT NULL,
  `user_activation_sent` TIMESTAMP NOT NULL DEFAULT now(),
  `user_passforgot_hash` CHAR(32) NULL,
  `user_passforgot_requested` VARCHAR(45) NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spice`.`brand`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spice`.`brand` ;

CREATE TABLE IF NOT EXISTS `spice`.`brand` (
  `brand_id` INT NOT NULL AUTO_INCREMENT,
  `brand_title` VARCHAR(255) NOT NULL,
  `brand_description` VARCHAR(4096) NULL DEFAULT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`brand_id`),
  INDEX `fk_brand_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_brand_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spice`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spice`.`spice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spice`.`spice` ;

CREATE TABLE IF NOT EXISTS `spice`.`spice` (
  `spice_id` INT NOT NULL AUTO_INCREMENT,
  `spice_title` VARCHAR(255) NOT NULL,
  `spice_description` VARCHAR(4096) NULL,
  `brand_id` INT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`spice_id`),
  INDEX `fk_spice_brand_idx` (`brand_id` ASC),
  INDEX `fk_spice_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_spice_brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `spice`.`brand` (`brand_id`)
    ON DELETE SET NULL
    ON UPDATE SET NULL,
  CONSTRAINT `fk_spice_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spice`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spice`.`store`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spice`.`store` ;

CREATE TABLE IF NOT EXISTS `spice`.`store` (
  `store_id` INT NOT NULL AUTO_INCREMENT,
  `store_title` VARCHAR(255) NOT NULL,
  `store_description` VARCHAR(4096) NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`store_id`),
  INDEX `fk_store_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_store_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spice`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spice`.`batch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spice`.`batch` ;

CREATE TABLE IF NOT EXISTS `spice`.`batch` (
  `batch_id` INT NOT NULL AUTO_INCREMENT,
  `batch_number` VARCHAR(45) NULL,
  `spice_id` INT NOT NULL,
  `store_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`batch_id`),
  INDEX `fk_batch_spice1_idx` (`spice_id` ASC),
  INDEX `fk_batch_store1_idx` (`store_id` ASC),
  INDEX `fk_batch_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_batch_spice1`
    FOREIGN KEY (`spice_id`)
    REFERENCES `spice`.`spice` (`spice_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_batch_store1`
    FOREIGN KEY (`store_id`)
    REFERENCES `spice`.`store` (`store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_batch_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spice`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spice`.`tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spice`.`tag` ;

CREATE TABLE IF NOT EXISTS `spice`.`tag` (
  `tag_id` INT NOT NULL AUTO_INCREMENT,
  `tag_title` VARCHAR(255) NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`tag_id`),
  INDEX `fk_tag_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_tag_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spice`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spice`.`spice_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `spice`.`spice_tag` ;

CREATE TABLE IF NOT EXISTS `spice`.`spice_tag` (
  `spice_tag_id` INT NOT NULL AUTO_INCREMENT,
  `spice_id` INT NOT NULL,
  `tag_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`spice_tag_id`),
  INDEX `fk_spice_tag_spice1_idx` (`spice_id` ASC),
  INDEX `fk_spice_tag_tag1_idx` (`tag_id` ASC),
  INDEX `fk_spice_tag_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_spice_tag_spice1`
    FOREIGN KEY (`spice_id`)
    REFERENCES `spice`.`spice` (`spice_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_spice_tag_tag1`
    FOREIGN KEY (`tag_id`)
    REFERENCES `spice`.`tag` (`tag_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_spice_tag_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `spice`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
